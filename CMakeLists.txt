PROJECT(krpc)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

OPTION(static_lib "Build static library" OFF)
OPTION(ndebug "Set â€“DNDEBUG" OFF)

LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
INCLUDE(compiler)
compiler_and_linker()

SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -W -g -gstabs+")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O2 -W -Wall -Wno-unused-parameter -Wunused-variable")
SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/)

IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
    MESSAGE(STATUS "Debug Mode")
    MESSAGE(STATUS "Flags:" ${CMAKE_CXX_FLAGS_DEBUG})
ELSE (CMAKE_BUILD_TYPE STREQUAL "Debug")
    MESSAGE(STATUS "Release Mode")
    MESSAGE(STATUS "Flags:" ${CMAKE_CXX_FLAGS_RELEASE})
    #SET (CMAKE_BUILD_TYPE "Release" CACHE STRING "build type" FORCE)
ENDIF (CMAKE_BUILD_TYPE STREQUAL "Debug")

add_definitions(-DNDEBUG)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/protocol)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/stream)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/util)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/buffer)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/net)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/net/server)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/net/client)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/driver)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/driver/reactor)

AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/driver         DRIVER_SRC)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/driver/reactor DRIVER_SRC)

AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src                RPC_SRC)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/protocol       RPC_SRC)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/stream         RPC_SRC)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/util           RPC_SRC)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/buffer         RPC_SRC)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/net            RPC_SRC)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/net/server     RPC_SRC)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src/net/client     RPC_SRC)

if (static_lib)
    ADD_LIBRARY(krpc_static STATIC ${RPC_SRC} ${DRIVER_SRC})
    SET_TARGET_PROPERTIES(krpc_static PROPERTIES OUTPUT_NAME "krpc")
endif()

ADD_LIBRARY(krpc_shared SHARED ${RPC_SRC} ${DRIVER_SRC})
SET_TARGET_PROPERTIES(krpc_shared PROPERTIES OUTPUT_NAME "krpc")

